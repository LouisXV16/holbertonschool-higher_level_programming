The ``matrix_divided`` module
============================

Using ``matrix_divided``
------------------------

Importing function from the module:
    >>> matrix_divided = __import__('matrix_divided').matrix_divided

Dividing a matrix by 2
    >>> matrix_divided([[1, 2], [3, 4]], 2)
    [[0.5, 1.0], [1.5, 2.0]]

Dividing a matrix by 3
    >>> matrix_divided([[9, 12], [15, 18]], 3)
    [[3.0, 4.0], [5.0, 6.0]]

Dividing a matrix with floats by 2.5
    >>> matrix_divided([[5.5, 7.5], [2.5, 10.0]], 2.5)
    [[2.2, 3.0], [1.0, 4.0]]

Dividing by a negative number
    >>> matrix_divided([[10, -20], [-30, 40]], -10)
    [[-1.0, 2.0], [3.0, -4.0]]

Dividing by a float
    >>> matrix_divided([[5, 10], [15, 20]], 2.5)
    [[2.0, 4.0], [6.0, 8.0]]

Matrix with unequal row sizes
    >>> matrix_divided([[1, 2, 3], [4, 5]], 1)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Matrix with non-numeric elements
    >>> matrix_divided([[1, 2], ["a", 4]], 1)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Divisor is zero
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Divisor is not a number
    >>> matrix_divided([[1, 2], [3, 4]], "hello")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Matrix is not a list of lists
    >>> matrix_divided([1, 2, 3, 4], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

